// Code generated by go-swagger; DO NOT EDIT.

package other

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostPublicSignupHandlerFunc turns a function with the right signature into a post public signup handler
type PostPublicSignupHandlerFunc func(PostPublicSignupParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostPublicSignupHandlerFunc) Handle(params PostPublicSignupParams) middleware.Responder {
	return fn(params)
}

// PostPublicSignupHandler interface for that can handle valid post public signup params
type PostPublicSignupHandler interface {
	Handle(PostPublicSignupParams) middleware.Responder
}

// NewPostPublicSignup creates a new http.Handler for the post public signup operation
func NewPostPublicSignup(ctx *middleware.Context, handler PostPublicSignupHandler) *PostPublicSignup {
	return &PostPublicSignup{Context: ctx, Handler: handler}
}

/*
	PostPublicSignup swagger:route POST /public/signup Other postPublicSignup

Регистрация пользователя
*/
type PostPublicSignup struct {
	Context *middleware.Context
	Handler PostPublicSignupHandler
}

func (o *PostPublicSignup) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostPublicSignupParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
